@using PhasePlayWeb.Data;
@inject ApplicationDbContext dBContext
@model Tuple<List<PhasePlayWeb.Models.Entities.Workout>, List<PhasePlayWeb.Models.Entities.Excercises>, List<PhasePlayWeb.Models.Entities.S_RSchema>>

<!DOCTYPE html>
<html>
<head>
    <title>New Program Creation</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/css/workoutbuilder.css" rel="stylesheet" />
    <link href="~/css/workoutbuilder-custom.css" rel="stylesheet" />
    <link href="https://cdn.syncfusion.com/ej2/20.2.36/material.css" rel="stylesheet">
</head>
<body>
    <div class="container-fluid">
        <!-- Top Navigation Bar -->
        <div class="row week-navigation mb-3">
            <div class="col-md-4 d-flex align-items-center">
                <button class="btn btn-outline-secondary mr-2"><i class="fas fa-chevron-left"></i></button>
                <h5 class="mb-0">Week 1 of @(ViewBag.Weeks ?? 1)</h5>
                <button class="btn btn-outline-secondary ml-2"><i class="fas fa-chevron-right"></i></button>
                <button class="btn btn-light ml-3">View Schema Details</button>
            </div>
            <div class="col-md-4 text-center">
                <button class="btn btn-primary" ><i class="fas fa-tasks mr-1"></i> Assign Program</button>
            </div>
            <div class="col-md-4 text-center">
                <button class="btn btn-primary">Save Program</button>
            </div>
           @*  <div class="col-md-4 text-right">
                <div class="toggle-container justify-content-end">
                    <label class="toggle-switch mr-2">
                        <input type="checkbox" checked>
                        <span class="toggle-slider"></span>
                    </label>
                    <div>
                        <strong>ENABLE</strong><br>
                        LIVE SYNC
                    </div>
                </div>
            </div> *@
        </div>

        <!-- Week Tabs -->
        <div class="row week-tabs">
            <div class="col-12 text-right">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-primary">1 Week</button>
                    <button type="button" class="btn btn-secondary">2 Week</button>
                    <button type="button" class="btn btn-secondary">4 Week</button>
                </div>
            </div>
        </div>

        <!-- Weekly Calendar Grid -->
        <div class="row">
            <!-- Week label column -->
            <div class="col-1 pr-0">
                <div class="vertical-text bg-light h-100 rounded">WEEK</div>
            </div>

            <!-- Days of the week -->
            <div class="col-11">
                <div class="row">
                    @for (int i = 1; i <= 7; i++)
                    {
                        <div class="col">
                            <div class="day-header">DAY @i</div>
                            <div class="day-column" data-day="@i">
                                <button class="add-button" title="Add workout" data-toggle="modal" data-target="#addExistingWorkoutModal" data-day="@i">
                                    <i class="fas fa-plus"></i>
                                </button>
                                <div class="workouts-container"></div>
                            </div>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-12 text-center">
                        <button class="btn btn-primary add-week-btn">Add Week</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--Add Existing Workout Modal - Updated with search and workout list-->
    <div class="modal fade" id="addExistingWorkoutModal" tabindex="-1" role="dialog" aria-labelledby="addExistingWorkoutModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addExistingWorkoutModalLabel">Add Existing Workout</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col">
                            <div class="input-group">
                                <input type="text" class="form-control" id="workoutSearchInput" placeholder="Search workouts...">
                                <div class="input-group-append">
                                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="workout-list mb-3">
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover" id="existingWorkoutsTable">
                                <thead class="thead-light">
                                    <tr>
                                        <th>Name</th>
                                        <th>Type</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.Item1 != null && Model.Item1.Count > 0)
                                    {
                                        foreach (var workout in Model.Item1)
                                        {
                                            <tr data-workout-id="@workout.ID">
                                                <td>@workout.Name</td>
                                                <td>@workout.Type</td>
                                                <td>
                                                    <button class="btn btn-sm select-workout"
                                                            data-workout-id="@workout.ID"
                                                            data-workout-name="@workout.Name">
                                                        <i class="fas fa-plus"></i> Select
                                                    </button>
                                                    <button class="btn btn-sm view-workout-details"
                                                            data-workout-id="@workout.ID">
                                                        <i class="fas fa-eye"></i> View
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="3" class="text-center">No workouts available</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="text-center">
                        <p>OR</p>
                    </div>

                    <div class="text-center">
                        <button class="btn btn-primary" title="Create workout" data-toggle="modal" data-target="#addWorkoutModal">
                            <i class="fas fa-plus-circle"></i> Create New Workout
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Workout Details Modal -->
    <div class="modal fade" id="workoutDetailsModal" tabindex="-1" role="dialog" aria-labelledby="workoutDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="workoutDetailsModalLabel">Workout Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="workout-details-content">
                        <!-- Workout details will be loaded here -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="selectWorkoutFromDetails">Select This Workout</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Create Workout Modal -->
    <div class="modal fade" id="addWorkoutModal" tabindex="-1" role="dialog" aria-labelledby="addWorkoutModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addWorkoutModalLabel">Create Workout</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="workoutName">Workout Name</label>
                        <input type="text" class="form-control" id="workoutName" name="name" required />
                    </div>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th class="col-6">Exercise</th>
                                <th class="col-6">Schema</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    <select class="form-select col-md-9 exercise-select">
                                        <option>Select Exercise</option>
                                        @if (Model.Item2 != null)
                                        {
                                            foreach (var exercise in Model.Item2)
                                            {
                                                <option value="@exercise.Id">@exercise.Name</option>
                                            }
                                        }
                                        else
                                        {
                                            <option>No Exercises Available</option>
                                        }
                                    </select>
                                </td>
                                <td>
                                    <select class="form-select col-md-9 schema-select" data-schema-target="#schemaTable" name="schemaId">
                                        <option value="">Select Schema</option>
                                        @if (Model.Item3 != null)
                                        {
                                            @foreach (var schemaGroup in Model.Item1.GroupBy(s => s.SchemaID))
                                            {
                                                <option value="@schemaGroup.First().SchemaID">@schemaGroup.First().Name</option>
                                            }
                                        }
                                        else
                                        {
                                            <option>No Schemas Available</option>
                                        }
                                    </select>
                                    <button type="button" class="btn" style="border-radius:30px;color:#fff" data-toggle="modal" data-target="#viewSchemaModal">
                                        <i class="fas fa-info-circle" aria-hidden="true"></i>
                                    </button>

                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <button type="button" class="btn add-row-btn">
                        <i class="fas fa-plus" aria-hidden="true"></i> Add Exercise
                    </button>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="addWorkoutBtn">Add</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add this before loading your JS file -->
    <script>
        // Define variables that your external JS needs
        var programWeeks = @(ViewBag.Weeks ?? 1);
        var programName = '@(ViewBag.ProgramName ?? "")';
        var programPhase = '@(ViewBag.Phase ?? "")';
        var saveProgramUrl = '@Url.Action("SaveProgram", "Programs")';

        // Any other ViewBag or model variables your JS needs
        var programWorkouts = @Html.Raw(Json.Serialize(ViewBag.ProgramWorkouts ?? new List<object>()));
        var programId = @(ViewBag.ProgramId ?? 0);
    </script>
    <script src="https://cdn.syncfusion.com/ej2/20.2.36/dist/ej2.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>    
    <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.21/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/js/program-creation-functionality.js"></script>
</body>
</html>
