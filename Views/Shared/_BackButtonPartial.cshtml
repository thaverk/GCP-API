@using Microsoft.AspNetCore.Identity
@using PhasePlayWeb.Models.Entities
@inject UserManager<User> userManager

@{
    var segments = Context.Request.Path.Value.Split('/', StringSplitOptions.RemoveEmptyEntries);

    // Check if the current path is the Athlete dashboard
    bool isAthleteDashboard = (segments.Length == 2 &&
                              segments[0].Equals("AthleteViews", StringComparison.OrdinalIgnoreCase) &&
                              segments[1].Equals("AthleteDashboard", StringComparison.OrdinalIgnoreCase));

    // Don't render back button if we're on the Athlete dashboard
    if (isAthleteDashboard)
    {
        return;
    }

    // Alternatively, you could check the user role and view name if needed
    /*
    var userEmail = Context.Request.Cookies["UserEmail"];
    var currentUser = userEmail != null ? await userManager.FindByEmailAsync(userEmail) : null;
    var userRoles = currentUser != null ? await userManager.GetRolesAsync(currentUser) : new List<string>();

    bool isAthleteOnDashboard = userRoles.Contains("Athlete") && segments.Length > 0 &&
    segments[segments.Length - 1].Equals("AthleteDashboard", StringComparison.OrdinalIgnoreCase);

    if (isAthleteOnDashboard)
    {
        return;
        }
    */
}

<button class="back-button" onclick="history.back()">
    <i class="fas fa-arrow-left"></i>
</button>
