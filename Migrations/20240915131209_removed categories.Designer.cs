// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhasePlayWeb.Data;

#nullable disable

namespace PhasePlayWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240915131209_removed categories")]
    partial class removedcategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.AttributeSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SetID")
                        .HasColumnType("int");

                    b.Property<int>("attributeID")
                        .HasColumnType("int");

                    b.Property<string>("order")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SetID");

                    b.HasIndex("attributeID");

                    b.ToTable("AttributeSets");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.Excercises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("category")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Excercises");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.ExerciseSetAttrib", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ExcerciseID")
                        .HasColumnType("int");

                    b.Property<string>("ExcerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PAExerciseID")
                        .HasColumnType("int");

                    b.Property<int?>("PerWeek")
                        .HasColumnType("int");

                    b.Property<int?>("RM")
                        .HasColumnType("int");

                    b.Property<double?>("RPE")
                        .HasColumnType("float");

                    b.Property<int>("SchemaID")
                        .HasColumnType("int");

                    b.Property<int?>("SupersetID")
                        .HasColumnType("int");

                    b.Property<string>("Velocity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("reps")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "SetEntity");

                    b.HasKey("id");

                    b.HasIndex("ExcerciseID");

                    b.HasIndex("PAExerciseID");

                    b.HasIndex("SchemaID");

                    b.ToTable("SetExcercises");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.GroupMembers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GroupMembers");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.GroupProgramme", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<int>("programmeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("GroupProgrammes");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.Groups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.OvSetExcercises", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ExcerciseID")
                        .HasColumnType("int");

                    b.Property<int>("OverAllSetID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ExcerciseID");

                    b.HasIndex("OverAllSetID");

                    b.ToTable("OvSetExcercises");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.OverAllSet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ProgramID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ProgramID");

                    b.ToTable("OverAllSets");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.PAExercise", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("AddNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("PAExercises");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.ProgramAttributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProgramID")
                        .HasColumnType("int");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramID");

                    b.ToTable("ProgramAttributes");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.Programme", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("GroupID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccursOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("Weeks")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.S_RSchema", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("RM_Increase")
                        .HasColumnType("int");

                    b.Property<double>("RPE_Increase")
                        .HasColumnType("float");

                    b.Property<int>("SetWeek")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("SRSchema");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.SchemaAttributes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("PercentRM")
                        .HasColumnType("int");

                    b.Property<double>("RPE")
                        .HasColumnType("float");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("SchemaID")
                        .HasColumnType("int");

                    b.Property<int?>("Vel")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("SchemaID");

                    b.ToTable("SchemaAttributes");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.SetAttributes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ExcercisesId")
                        .HasColumnType("int");

                    b.Property<int>("SetID")
                        .HasColumnType("int");

                    b.Property<int?>("SetNumber")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ExcercisesId");

                    b.HasIndex("SetID");

                    b.ToTable("SetAttributes");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.Superset", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("PAExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("restperiod")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Supersets");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.SupersetExcerciseAttr", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("SupersetID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("SupersetExcerciseAttr");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.Teams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.UserExercises", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("category")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("UserExercises");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.UserSRSchema", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("SetWeek")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("userSRSchemas");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.UserSchemaAttributes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("PercentRM")
                        .HasColumnType("int");

                    b.Property<double>("RPE")
                        .HasColumnType("float");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("UserSRSchemaId")
                        .HasColumnType("int");

                    b.Property<int?>("Vel")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("userSchemaAttributes");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.AttributeSet", b =>
                {
                    b.HasOne("PhasePlayWeb.Models.Entities.PAExercise", "Sets")
                        .WithMany()
                        .HasForeignKey("SetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhasePlayWeb.Models.Entities.ProgramAttributes", "ProgramAttributes")
                        .WithMany()
                        .HasForeignKey("attributeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramAttributes");

                    b.Navigation("Sets");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.ExerciseSetAttrib", b =>
                {
                    b.HasOne("PhasePlayWeb.Models.Entities.Excercises", "Excercises")
                        .WithMany()
                        .HasForeignKey("ExcerciseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhasePlayWeb.Models.Entities.PAExercise", "PAExercise")
                        .WithMany()
                        .HasForeignKey("PAExerciseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhasePlayWeb.Models.Entities.S_RSchema", "S_RSchema")
                        .WithMany()
                        .HasForeignKey("SchemaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excercises");

                    b.Navigation("PAExercise");

                    b.Navigation("S_RSchema");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.Groups", b =>
                {
                    b.HasOne("PhasePlayWeb.Models.Entities.Teams", "Teams")
                        .WithMany()
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.OvSetExcercises", b =>
                {
                    b.HasOne("PhasePlayWeb.Models.Entities.Excercises", "Excercise")
                        .WithMany()
                        .HasForeignKey("ExcerciseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhasePlayWeb.Models.Entities.OverAllSet", "OverAllSet")
                        .WithMany()
                        .HasForeignKey("OverAllSetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excercise");

                    b.Navigation("OverAllSet");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.OverAllSet", b =>
                {
                    b.HasOne("PhasePlayWeb.Models.Entities.Programme", "Programme")
                        .WithMany()
                        .HasForeignKey("ProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programme");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.ProgramAttributes", b =>
                {
                    b.HasOne("PhasePlayWeb.Models.Entities.Programme", "Programme")
                        .WithMany()
                        .HasForeignKey("ProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programme");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.SchemaAttributes", b =>
                {
                    b.HasOne("PhasePlayWeb.Models.Entities.S_RSchema", "S_RSchema")
                        .WithMany()
                        .HasForeignKey("SchemaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("S_RSchema");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.SetAttributes", b =>
                {
                    b.HasOne("PhasePlayWeb.Models.Entities.Excercises", "Excercises")
                        .WithMany()
                        .HasForeignKey("ExcercisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhasePlayWeb.Models.Entities.PAExercise", "Sets")
                        .WithMany()
                        .HasForeignKey("SetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excercises");

                    b.Navigation("Sets");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.Teams", b =>
                {
                    b.HasOne("PhasePlayWeb.Models.Entities.User", "User")
                        .WithMany("teams")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhasePlayWeb.Models.Entities.User", b =>
                {
                    b.Navigation("teams");
                });
#pragma warning restore 612, 618
        }
    }
}
